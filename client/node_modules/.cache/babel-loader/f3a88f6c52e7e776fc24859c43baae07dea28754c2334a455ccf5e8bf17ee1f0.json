{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nadii\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\666\\\\web\\\\lab3\\\\client\\\\src\\\\components\\\\QuestionComponent.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Question {\n  constructor(text, options) {\n    this.text = text;\n    this.options = options;\n  }\n}\nclass Quiz {\n  constructor(questionsData) {\n    this.questions = questionsData.map(data => new Question(data.question, data.options));\n    this.currentQuestionIndex = 0;\n  }\n  getCurrentQuestion() {\n    return this.questions[this.currentQuestionIndex];\n  }\n  nextQuestion() {\n    this.currentQuestionIndex++;\n    if (this.currentQuestionIndex >= this.questions.length) {\n      this.currentQuestionIndex = this.questions.length - 1;\n    }\n  }\n  previousQuestion() {\n    this.currentQuestionIndex--;\n    if (this.currentQuestionIndex < 0) {\n      this.currentQuestionIndex = 0;\n    }\n  }\n}\nconst questionsData = [{\n  question: \"What are your main stress factors in everyday life?\",\n  options: [\"Workload\", \"Family conflicts\", \"Financial problems\", \"Health\"]\n}, {\n  question: \"What is your primary source of positive emotions?\",\n  options: [\"Interaction with close people\", \"Accomplishing tasks and achieving goals\", \"Creative activities\", \"Traveling and new experiences\"]\n}, {\n  question: \"How do you influence the emotional state of your close ones and surroundings?\",\n  options: [\"Foster positive emotions and support\", \"Resolve conflicts and improve others' mood\", \"Induce negative emotions through your actions or words\", \"Empathize but do not influence\"]\n}, {\n  question: \"What is your favorite strategy for stress relief?\",\n  options: [\"Hanging out with friends\", \"Meditation or yoga\", \"Sports or physical activity\", \"Culinary experiments in the kitchen\"]\n}, {\n  question: \"How do you react to your own mistakes or failures?\",\n  options: [\"Accept them as part of the learning process and an opportunity for growth\", \"Begin to feel sad and experience significant stress\", \"Quickly move on to finding solutions and correcting mistakes\", \"Feel a loss of confidence and have a negative attitude towards yourself\"]\n}];\nconst quiz = new Quiz(questionsData);\nfunction QuestionComponent({\n  question,\n  options\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"question\",\n            id: `option-${index}`,\n            value: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: `option-${index}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_c = QuestionComponent;\nvar _c;\n$RefreshReg$(_c, \"QuestionComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Question","constructor","text","options","Quiz","questionsData","questions","map","data","question","currentQuestionIndex","getCurrentQuestion","nextQuestion","length","previousQuestion","quiz","QuestionComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","option","index","type","name","id","value","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/nadii/OneDrive/Рабочий стол/666/web/lab3/client/src/components/QuestionComponent.js"],"sourcesContent":["import React from \"react\";\r\n\r\nclass Question {\r\n    constructor(text, options) {\r\n        this.text = text;\r\n        this.options = options;\r\n    }\r\n}\r\n\r\nclass Quiz {\r\n    constructor(questionsData) {\r\n        this.questions = questionsData.map(data => new Question(data.question, data.options));\r\n        this.currentQuestionIndex = 0;\r\n    }\r\n\r\n    getCurrentQuestion() {\r\n        return this.questions[this.currentQuestionIndex];\r\n    }\r\n\r\n    nextQuestion() {\r\n        this.currentQuestionIndex++;\r\n        if (this.currentQuestionIndex >= this.questions.length) {\r\n            this.currentQuestionIndex = this.questions.length - 1;\r\n        }\r\n    }\r\n\r\n    previousQuestion() {\r\n        this.currentQuestionIndex--;\r\n        if (this.currentQuestionIndex < 0) {\r\n            this.currentQuestionIndex = 0;\r\n        }\r\n    }\r\n}\r\n\r\nconst questionsData = [\r\n    {\r\n        question: \"What are your main stress factors in everyday life?\",\r\n        options: [\"Workload\", \"Family conflicts\", \"Financial problems\", \"Health\"]\r\n    },\r\n    {\r\n        question: \"What is your primary source of positive emotions?\",\r\n        options: [\"Interaction with close people\", \"Accomplishing tasks and achieving goals\", \"Creative activities\", \"Traveling and new experiences\"]\r\n    },\r\n    {\r\n        question: \"How do you influence the emotional state of your close ones and surroundings?\",\r\n        options: [\"Foster positive emotions and support\", \"Resolve conflicts and improve others' mood\", \"Induce negative emotions through your actions or words\", \"Empathize but do not influence\"]\r\n    },\r\n    {\r\n        question: \"What is your favorite strategy for stress relief?\",\r\n        options: [\"Hanging out with friends\", \"Meditation or yoga\", \"Sports or physical activity\", \"Culinary experiments in the kitchen\"]\r\n    },\r\n    {\r\n        question: \"How do you react to your own mistakes or failures?\",\r\n        options: [\"Accept them as part of the learning process and an opportunity for growth\", \"Begin to feel sad and experience significant stress\", \"Quickly move on to finding solutions and correcting mistakes\", \"Feel a loss of confidence and have a negative attitude towards yourself\"]\r\n    }\r\n];\r\n\r\nconst quiz = new Quiz(questionsData);\r\n\r\nfunction QuestionComponent({ question, options }) {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-header\">{question}</div>\r\n            <div className=\"card-body\">\r\n                <form>\r\n                    {options.map((option, index) => (\r\n                        <div className=\"form-check\" key={index}>\r\n                            <input className=\"form-check-input\" type=\"radio\" name=\"question\" id={`option-${index}`} value={option} />\r\n                            <label className=\"form-check-label\" htmlFor={`option-${index}`}>{option}</label>\r\n                        </div>\r\n                    ))}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}