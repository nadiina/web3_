{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nadii\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\666\\\\web\\\\lab3\\\\client\\\\src\\\\components\\\\QuestionComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionComponent() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    fetch(\"/api/questions\").then(response => {\n      setQuestions(response.data);\n    }).catch(error => {\n      console.error('Error fetching questions:', error);\n    });\n  }, []);\n\n  /*    useEffect(() => {\r\n          axios.get('http://localhost:5000/api/questions')\r\n              .then(response => {\r\n                  setQuestions(response.data);\r\n              })\r\n              .catch(error => {\r\n                  console.error('Error fetching questions:', error);\r\n              });\r\n      }, []);*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions && questions.length > 0 && questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: JSON.parse(question.options).map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(QuestionComponent, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n_c = QuestionComponent;\nexport default QuestionComponent;\nvar _c;\n$RefreshReg$(_c, \"QuestionComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","QuestionComponent","_s","questions","setQuestions","fetch","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","question","index","JSON","parse","options","option","_c","$RefreshReg$"],"sources":["C:/Users/nadii/OneDrive/Рабочий стол/666/web/lab3/client/src/components/QuestionComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction QuestionComponent() {\r\n    const [questions, setQuestions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"/api/questions\").then(response => {\r\n            setQuestions(response.data);\r\n        })\r\n            .catch(error => {\r\n                console.error('Error fetching questions:', error);\r\n            });\r\n    }, []);\r\n\r\n/*    useEffect(() => {\r\n        axios.get('http://localhost:5000/api/questions')\r\n            .then(response => {\r\n                setQuestions(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching questions:', error);\r\n            });\r\n    }, []);*/\r\n\r\n    return (\r\n        <div>\r\n            <h1>Quiz Questions</h1>\r\n            <ul>\r\n                {questions && questions.length > 0 && questions.map((question, index) => (\r\n                    <li key={index}>\r\n                        <h2>{question.question}</h2>\r\n                        <ul>\r\n                            {JSON.parse(question.options).map((option, index) => (\r\n                                <li key={index}>{option}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </li>\r\n                ))}\r\n\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuestionComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MACrCH,YAAY,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC/B,CAAC,CAAC,CACGC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,oBACIV,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhB,OAAA;MAAAY,QAAA,EACKT,SAAS,IAAIA,SAAS,CAACc,MAAM,GAAG,CAAC,IAAId,SAAS,CAACe,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAChEpB,OAAA;QAAAY,QAAA,gBACIZ,OAAA;UAAAY,QAAA,EAAKO,QAAQ,CAACA;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5BhB,OAAA;UAAAY,QAAA,EACKS,IAAI,CAACC,KAAK,CAACH,QAAQ,CAACI,OAAO,CAAC,CAACL,GAAG,CAAC,CAACM,MAAM,EAAEJ,KAAK,kBAC5CpB,OAAA;YAAAY,QAAA,EAAiBY;UAAM,GAAdJ,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAC/B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA,GANAI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACd,EAAA,CAxCQD,iBAAiB;AAAAwB,EAAA,GAAjBxB,iBAAiB;AA0C1B,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}